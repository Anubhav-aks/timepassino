{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","title","bool","head","rule","yourChoice","console","log","botChoice","humanChoice","image","src","numberOfChoice","randomBot","result","winner","y","z","messages","finalMessage","autoimage","computerImage","Math","floor","random","number","computerChoice","dataBase","yourScore","computerScore","yoursScore","computersScore","value","rules","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Rock-Paper-Scissors';\n  bool=false;\n  head=\"blue\"\n  messages;\n  image;\n  autoimage;\n  rule=false;\n  rules(){\n    this.rule=true\n  }\n  reset(){\n    this.bool=false\n  }\n  rpsGame(yourChoice){\n   console.log(yourChoice.id)\n   \n   var yourChoice, botChoice;\n   var humanChoice=yourChoice.id\n   this.image=yourChoice.src;\n   botChoice=(this.numberOfChoice(this.randomBot()));\n   console.log(\"Computer Choice\",botChoice)\n   var result=(this.winner(humanChoice,botChoice));\n   console.log(result);\n   var y=result[0];\n   var z=result[1]\n    \n   this.messages=(this.finalMessage(y,z))\n   console.log(this.messages)\n   this.autoimage=this.computerImage(botChoice)\n   this.bool=true;\n  }\n\n  randomBot(){\n    return Math.floor(Math.random()*3)\n  }\n\n  numberOfChoice(number){\n    return [\"rock\",\"paper\",\"scissors\"][number]\n  }\n\n  winner(yourChoice,computerChoice){\n   var dataBase={\n     \"rock\":{\"rock\":0.5,\"paper\":0,\"scissors\":1},\n     \"paper\":{\"rock\":1,\"paper\":0.5,\"scissors\":0},\n     \"scissors\":{\"rock\":0,\"paper\":1,\"scissors\":0.5}\n   }\n   var yourScore=dataBase[yourChoice][computerChoice];\n   var computerScore=dataBase[computerChoice][yourChoice]\n\n   return [yourScore,computerScore]\n  }\n\n finalMessage(yoursScore,computersScore){\nif(yoursScore===0){\n  return {\"message\":\"You Lost!\",\"color\":\"red\"}\n}\n else if(yoursScore===0.5){\n  return {\"message\":\"You Tie!\",\"color\":\"yellow\"}\n}\nelse{\n  return {\"message\":\"You Win!\",\"color\":\"green\"}\n}\n }\n\n computerImage(value){\n  if(value==\"rock\"){\n    return \"assets/image/rock.jpg\"\n  }\n   else if(value==\"paper\"){\n    return \"assets/image/paper.jpg\"\n  }\n  else if(value==\"scissors\"){\n    return \"assets/image/scissors.jpg\"\n  }\n }\n\n  \n}\n","<div class=\"card mb-3\">\n  <img src=\"assets/image/download.jpg\"  class=\"card-img-top\" alt=\"Rock Paper Scissors\">\n  <div class=\"card-body\">\n    <h3 class=\"card-title\" class=\"title1\">Rock Paper Scissors</h3>\n    <h6 class=\"card-subtitle mb-2 text-muted\" class=\"text-primary\">Play one of the three objects against your opponent</h6>\n  </div>\n</div>\n<div class=\"container\" *ngIf=\"!bool\">\n  <form>\n    <div class=\"row\">\n      <div class=\"col-md-4\">\n        <img src=\"assets/image/rock.jpg\" value=\"rock\" class=\"img1\" #rock height=\"150px\" width=\"150px\" class=\"card-img-top\" alt=\"Rock\"\n          id=\"rock\" (click)=\"rpsGame(rock)\"> </div>\n      <div class=\"col-md-4\"><img src=\"assets/image/paper.jpg\" class=\"img1\" #paper value=\"paper\" height=\"150px\" width=\"150px\"\n          class=\"card-img-top\" id=\"paper\" alt=\"Paper\" (click)=\"rpsGame(paper)\"> </div>\n      <div class=\"col-md-4\"><img src=\"assets/image/scissors.jpg\" class=\"img1\" #scissors value=\"scissors\" height=\"150px\" width=\"150px\"\n          class=\"card-img-top\" id=\"scissors\" alt=\"Scissors\" (click)=\"rpsGame(scissors)\"></div>\n    </div>\n  </form>\n</div>\n\n<div class=\"gap\">\n  <button type=\"button\"  (click)=\"rules()\" class=\"btn btn-outline-info btn-block\">How to play?</button>\n</div>\n<div class=\"container-fluid\"  *ngIf=\"rule\">\n<small class=\"text-info\">\n  Rock paper scissors (also known by other permutations such as scissors paper rock, or ro-sham-bo) is a hand game usually played between two people, in which each player simultaneously forms one of three shapes with an outstretched hand. These shapes are \"rock\" (a closed fist), \"paper\" (a flat hand), and \"scissors\" (a fist with the index finger and middle finger extended, forming a V). \"Scissors\" is identical to the two-fingered V sign (also indicating \"victory\" or \"peace\") except that it is pointed horizontally instead of being held upright in the air. A simultaneous, zero-sum game, it has only two possible outcomes: a draw, or a win for one player and a loss for the other.<br>\n  A player who decides to play rock will beat another player who has chosen scissors (\"rock crushes scissors\" or sometimes \"blunts scissors\"[1]), but will lose to one who has played paper (\"paper covers rock\"); a play of paper will lose to a play of scissors (\"scissors cuts paper\"). If both players choose the same shape, the game is tied and is usually immediately replayed to break the tie. The type of game originated in China and spread with increased contact with East Asia, while developing different variants in signs over time. Other names for the game in the English-speaking world include roshambo and other orderings of the three items, with \"rock\" sometimes being called \"stone\"<br>\n  Rock paper scissors is often used as a fair choosing method between two people, similar to coin flipping, drawing straws, or throwing dice in order to settle a dispute or make an unbiased group decision. Unlike truly random selection methods, however, rock paper scissors can be played with a degree of skill by recognizing and exploiting non-random behavior in opponents.\n</small>\n</div>\n\n\n<div class=\"container mb-3\" *ngIf=\"bool\" >\n  <div class=\"space\" class=\"row\"> \n    <div class=\"col-md-12\" >\n      <h1 [style.color]=\"messages.color\" class=\"space\">{{messages.message}}</h1>\n    </div>\n</div>\n<div class=\"container\" *ngIf=\"bool\">\n  <div class=\"gap\">\n    <button type=\"button\" (click)=\"reset()\" class=\"btn btn-info btn-block\">Play Again!</button>\n  </div>\n  <form>\n    <div class=\"row\">\n      <div class=\"col-md-6\" >\n        <div class=\"card\" style=\"width: 18rem;\" [style.background-color]=\"messages.color\">\n          <div class=\"card-body\">\n            <h2 class=\"card-title\" [style.color]=\"head\">You Have Chosen</h2>\n            <img src=\"{{image}}\" height=\"150px\" width=\"150px\" class=\"card-img-top\">         \n          </div>\n        </div>         \n      </div>  \n      <div class=\"col-md-6\" >\n        <div class=\"card\" style=\"width: 18rem;\" [style.background-color]=\"messages.color\">\n          <div class=\"card-body\">\n            <h2 class=\"card-title\" [style.color]=\"head\">Alien Has Chosen</h2>\n            <img src=\"{{autoimage}}\" height=\"150px\" width=\"150px\" class=\"card-img-top\">         \n          </div>\n        </div>       \n      </div>\n    </div>\n  </form>\n</div>\n\n  \n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}